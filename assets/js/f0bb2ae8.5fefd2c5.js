"use strict";(self.webpackChunknuke_website=self.webpackChunknuke_website||[]).push([[7098],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return d}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),u=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(a),d=r,h=c["".concat(l,".").concat(d)]||c[d]||m[d]||o;return a?n.createElement(h,i(i({ref:t},p),{},{components:a})):n.createElement(h,i({ref:t},p))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},72360:function(e,t,a){a.d(t,{Z:function(){return i}});var n=a(67294),r=a(86010),o="tabItem_OmH5";function i(e){var t=e.children,a=e.hidden,i=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:a},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return d}});var n=a(87462),r=a(67294),o=a(72389),i=a(67392),s=a(7094),l=a(12466),u=a(86010),p="tabList_uSqn",m="tabItem_LplD";function c(e){var t,a,o,c=e.lazy,d=e.block,h=e.defaultValue,v=e.values,g=e.groupId,f=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=v?v:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),N=(0,i.l)(y,(function(e,t){return e.value===t.value}));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===h?h:null!=(t=null!=h?h:null==(a=k.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(o=k[0])?void 0:o.props.value;if(null!==b&&!y.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,s.U)(),C=w.tabGroupChoices,T=w.setTabGroupChoices,P=(0,r.useState)(b),x=P[0],E=P[1],V=[],M=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var I=C[g];null!=I&&I!==x&&y.some((function(e){return e.value===I}))&&E(I)}var O=function(e){var t=e.currentTarget,a=V.indexOf(t),n=y[a].value;n!==x&&(M(t),E(n),null!=g&&T(g,n))},S=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=V.indexOf(e.currentTarget)+1;a=V[n]||V[0];break;case"ArrowLeft":var r=V.indexOf(e.currentTarget)-1;a=V[r]||V[V.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,u.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":d},f)},y.map((function(e){var t=e.value,a=e.label,o=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:function(e){return V.push(e)},onKeyDown:S,onFocus:O,onClick:O},o,{className:(0,u.Z)("tabs__item",m,null==o?void 0:o.className,{"tabs__item--active":x===t})}),null!=a?a:t)}))),c?(0,r.cloneElement)(k.filter((function(e){return e.props.value===x}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==x})}))))}function d(e){var t=(0,o.Z)();return r.createElement(c,(0,n.Z)({key:String(t)},e))}},66638:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return v},frontMatter:function(){return u},metadata:function(){return m},toc:function(){return d}});var n=a(87462),r=a(63366),o=(a(67294),a(3905)),i=a(9877),s=a(72360),l=(a(55670),["components"]),u={title:"Parameters"},p=void 0,m={unversionedId:"fundamentals/parameters",id:"fundamentals/parameters",title:"Parameters",description:"Another important aspect of build automation is the ability of passing input values to your build. These input values can be anything from generic texts, numeric and enum values, file and directory paths, arrays of aforementioned, boolean flags, or secrets. NUKE comes with a succinct way to declare parameters and lets you set their values in various ways.",source:"@site/docs/02-fundamentals/06-parameters.md",sourceDirName:"02-fundamentals",slug:"/fundamentals/parameters",permalink:"/docs/fundamentals/parameters",draft:!1,editUrl:"https://github.com/nuke-build/nuke/edit/develop/website/docs/02-fundamentals/06-parameters.md",tags:[],version:"current",lastUpdatedBy:"Matthias Koch",lastUpdatedAt:1655975335,formattedLastUpdatedAt:"6/23/2022",sidebarPosition:6,frontMatter:{title:"Parameters"},sidebar:"tutorialSidebar",previous:{title:"Target Definitions",permalink:"/docs/fundamentals/targets"},next:{title:"Logging",permalink:"/docs/fundamentals/logging"}},c={},d=[{value:"Passing Parameter Values",id:"passing-parameter-values",level:2},{value:"Passing Values through the Command-Line",id:"passing-values-through-the-command-line",level:3},{value:"Passing Values through Parameter Files",id:"passing-values-through-parameter-files",level:3},{value:"Passing Values through Environment Variables",id:"passing-values-through-environment-variables",level:3},{value:"Required Parameters",id:"required-parameters",level:2},{value:"Secret Parameters",id:"secret-parameters",level:2},{value:"Unlisting Parameters",id:"unlisting-parameters",level:2},{value:"Supported Types",id:"supported-types",level:2},{value:"Custom Types",id:"custom-types",level:3}],h={toc:d};function v(e){var t=e.components,u=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},h,u,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Another important aspect of build automation is the ability of passing input values to your build. These input values can be anything from generic texts, numeric and enum values, file and directory paths, arrays of aforementioned, boolean flags, or secrets. NUKE comes with a succinct way to declare parameters and lets you set their values in various ways."),(0,o.kt)("p",null,"You can declare a parameter by adding the ",(0,o.kt)("inlineCode",{parentName:"p"},"Parameter")," attribute to a field or property:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'[Parameter("Description")]\nreadonly string MyParameter;\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"You can set default values for parameters as you would normally do through field and property initializers. You can also use static ",(0,o.kt)("a",{parentName:"p",href:"/docs/fundamentals/builds#base-properties"},"build base properties")," like ",(0,o.kt)("inlineCode",{parentName:"p"},"IsLocalBuild")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"IsServerBuild")," for environmental adjustments:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"[Parameters]\nreadonly Configuration Configuration = IsServerBuild\n    ? Configuration.Release\n    : Configuration.Debug;\n")),(0,o.kt)("p",{parentName:"div"},"Following best practices, you should mark all your parameters as ",(0,o.kt)("inlineCode",{parentName:"p"},"readonly"),"."))),(0,o.kt)("h2",{id:"passing-parameter-values"},"Passing Parameter Values"),(0,o.kt)("p",null,"Parameters are resolved through different mechanism, each supporting a different automation use-case. These mechanisms are explained in the following sections by their resolution priority."),(0,o.kt)("h3",{id:"passing-values-through-the-command-line"},"Passing Values through the Command-Line"),(0,o.kt)("p",null,"In the most straightforward way, you can pass parameter values from the command-line through their ",(0,o.kt)("a",{parentName:"p",href:"https://www.theserverside.com/definition/Kebab-case"},"kebab-case")," names prefixed with a double-dash:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"# terminal-command\nnuke --my-parameter <value>\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"With the global tool installed and ",(0,o.kt)("a",{parentName:"p",href:"/docs/global-tool/shell-completion"},"shell completion")," configured, you can pass parameters much faster and avoid any typos."))),(0,o.kt)("h3",{id:"passing-values-through-parameter-files"},"Passing Values through Parameter Files"),(0,o.kt)("p",null,"Instead of providing default values in your ",(0,o.kt)("inlineCode",{parentName:"p"},"Build")," class or repeatedly specifying them through the command-line, you can also put them in so-called parameter files (JSON). These files are located under the ",(0,o.kt)("inlineCode",{parentName:"p"},".nuke")," directory:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title=".nuke/parameters.json"',title:'".nuke/parameters.json"'},'{\n    "$schema": "./build.schema.json",\n    "MyParameter": "value"\n}\n')),(0,o.kt)("p",null,"Besides the default ",(0,o.kt)("inlineCode",{parentName:"p"},"parameters.json")," file, you can create additional profiles following the ",(0,o.kt)("inlineCode",{parentName:"p"},"parameters.<name>.json")," naming pattern. These profiles can be loaded on-demand"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"# terminal-command\nnuke --profile <name> [other-profiles...]\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Profiles are applied in the order they are passed, whereas the default parameters file comes first."))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Based on the ",(0,o.kt)("inlineCode",{parentName:"p"},"build.schema.json")," file, you can easily configure your parameters inside your IDE using schema-completion:"),(0,o.kt)("p",{style:{maxWidth:"550px"}},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("img",{alt:"Completion in Parameter Files",src:a(49687).Z+"#gh-light-mode-only",width:"1080",height:"592"}),"\n",(0,o.kt)("img",{alt:"Completion in Parameter Files",src:a(12262).Z+"#gh-dark-mode-only",width:"1080",height:"592"}))),(0,o.kt)("p",{parentName:"div"},"Remember, that the ",(0,o.kt)("inlineCode",{parentName:"p"},"build.schema.json")," file must be regenerated whenever you add or change a parameter. For instance by calling ",(0,o.kt)("inlineCode",{parentName:"p"},"nuke --help"),"."))),(0,o.kt)("h3",{id:"passing-values-through-environment-variables"},"Passing Values through Environment Variables"),(0,o.kt)("p",null,"You can set parameter values through environment variables, which can be really helpful when setting up global values in CI/CD pipelines. This is done in such a manner that casing and underscores are completely ignored. Also, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"NUKE_")," prefix to easily distinguish them from others:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"SET MY_PARAMETER = <value>\nSET NUKE_MY_PARAMETER = <value>\n")),(0,o.kt)("h2",{id:"required-parameters"},"Required Parameters"),(0,o.kt)("p",null,"You can specify a parameter as a ",(0,o.kt)("a",{parentName:"p",href:"/docs/fundamentals/targets#requirements"},"target requirement")," using the following shorthand syntax:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"Target Deploy => _ => _\n    .Requires(() => ApiKey)\n    .Executes(() =>\n    {\n    });\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Using the shorthand syntax allows you to provide the value interactively when the build is exexcuted locally."))),(0,o.kt)("h2",{id:"secret-parameters"},"Secret Parameters"),(0,o.kt)("p",null,"When parameters are meant to hold ",(0,o.kt)("strong",{parentName:"p"},"secret values")," like passwords or authentication tokens, you can add the ",(0,o.kt)("inlineCode",{parentName:"p"},"Secret")," attribute:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"[Parameter] [Secret] readonly string NuGetApiKey;\n")),(0,o.kt)("p",null,"Marking a parameter as a secret allows you to use the ",(0,o.kt)("a",{parentName:"p",href:"/docs/global-tool/secrets"},"secret management")," through the global tool."),(0,o.kt)("h2",{id:"unlisting-parameters"},"Unlisting Parameters"),(0,o.kt)("p",null,"Just like targets, your parameters will automatically show up in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/getting-started/execution#help-text"},"build help text")," along with their description. You can opt-out from this behavior by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"List")," property:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"[Parameter(List = false)]\nreadonly string MyParameter;\n")),(0,o.kt)("p",null,"Unlisted parameters can be passed as normal and are still available through ",(0,o.kt)("a",{parentName:"p",href:"/docs/global-tool/shell-completion"},"shell completion"),"."),(0,o.kt)("h2",{id:"supported-types"},"Supported Types"),(0,o.kt)("p",null,"Parameters ",(0,o.kt)("strong",{parentName:"p"},"support a wide range of primitive and complex types"),", including their nullable and array counterparts:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},'[Parameter] readonly string StringValue;\n[Parameter] readonly bool BoolValue;\n[Parameter] readonly int? IntegerValue;\n[Parameter] readonly string[] StringArray;\n\n[Parameter] readonly MSBuildVersion MSBuildVersion;\n[Parameter] readonly Configuration Configuration;\n[Parameter] readonly AbsolutePath AbsolutePath;\n\nTarget Print => _ => _\n    .Executes(() =>\n    {\n        Log.Information("StringValue = {Value}", StringValue);\n        Log.Information("BoolValue = {Value}", BoolValue);\n        Log.Information("IntegerValue = {Value}", IntegerValue?.ToString() ?? "<null>");\n        Log.Information("StringArray = {Value}", StringArray?.JoinComma() ?? "<null>");\n\n        Log.Information("MSBuildVersion = {Value}", MSBuildVersion);\n        Log.Information("Configuration = {Value}", Configuration);\n        Log.Information("AbsolutePath = {Value}", AbsolutePath);\n    });\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"By default, the whitespace character is used to pass multiple values for an array parameter. You can quote your values to treat them as single elements for the parameters. Additionally, you can provide a custom separator through the attribute (whitespace will still work as a separator):"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"[Parameter(Separator = '+')]\nreadonly int[] Numbers;\n")))),(0,o.kt)("h3",{id:"custom-types"},"Custom Types"),(0,o.kt)("p",null,"All the supported types from above use the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.typeconverter"},"type converter")," infrastructure to convert string values to their respective type instances. This works independently of the fact how the parameter is resolved. It is worth noting, that also parameter files will be converter to strings internally."),(0,o.kt)("p",null,"Depending on your use-case, you can choose one of the following approaches to define your custom type that can convert from string values:"),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"enum-types",label:"Enumeration Types",mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/enum"},"Enumeration types")," define a set of named constants with underlying numeric value:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"enum CustomType\n{\n    One,\n    Two,\n    Three\n}\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Members of enumeration types automatically show up during ",(0,o.kt)("a",{parentName:"p",href:"/docs/global-tool/shell-completion"},"shell completion"),".")))),(0,o.kt)(s.Z,{value:"enum-classes",label:"Enumeration Classes",mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/enumeration-classes-over-enum-types"},"Enumeration classes")," are open for external extension. The ",(0,o.kt)("inlineCode",{parentName:"p"},"Enumeration")," base class defines equality operators and implicit string conversion:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"[TypeConverter(typeof(TypeConverter<Configuration>))]\npublic class Configuration : Enumeration\n{\n    public static Configuration Debug = new () { Value = nameof(Debug) };\n    public static Configuration Release = new () { Value = nameof(Release) };\n}\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Members of enumeration classes automatically show up during ",(0,o.kt)("a",{parentName:"p",href:"/docs/global-tool/shell-completion"},"shell completion"),".")))),(0,o.kt)(s.Z,{value:"custom-types",label:"Custom Types",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"[TypeConverter(typeof(TypeConverter))]\npublic class CustomType\n{\n    public class TypeConverter : System.ComponentModel.TypeConverter\n    {\n        public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)\n        {\n            return sourceType == typeof(string) || base.CanConvertFrom(context, sourceType);\n        }\n\n        public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)\n        {\n            if (value is string data)\n                return new CustomType(data); \n\n            if (value is null)\n                return null;\n\n            return base.ConvertFrom(context, culture, value);\n        }\n    }\n\n    public CustomType(string data)\n    {\n        // ...\n    }\n}\n")))))}v.isMDXComponent=!0},12262:function(e,t,a){t.Z=a.p+"assets/images/parameter-file-completion-dark-024615aa45be04d3266525d10c7e20e1.webp"},49687:function(e,t,a){t.Z=a.p+"assets/images/parameter-file-completion-light-94b94ba6202e5f4060058a8702535f10.webp"}}]);