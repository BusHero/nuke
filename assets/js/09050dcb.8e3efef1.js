"use strict";(self.webpackChunknuke_website=self.webpackChunknuke_website||[]).push([[8689],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},89379:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i=["components"],l={title:"Converting from Cake"},c=void 0,s={unversionedId:"global-tool/cake",id:"global-tool/cake",title:"Converting from Cake",description:"Over the years, the .NET community has come up with a lot of great build automation tools, including FAKE, Cake, FlubuCore, and BullsEye. When coming from Cake Scripting, the time for converting build scripts can be greatly reduced with a best-effort approach using Roslyn and its syntax transformation capabilities.",source:"@site/docs/06-global-tool/04-cake.md",sourceDirName:"06-global-tool",slug:"/global-tool/cake",permalink:"/docs/global-tool/cake",draft:!1,editUrl:"https://github.com/nuke-build/nuke/edit/develop/website/docs/06-global-tool/04-cake.md",tags:[],version:"current",lastUpdatedBy:"Matthias Koch",lastUpdatedAt:1656273622,formattedLastUpdatedAt:"6/26/2022",sidebarPosition:4,frontMatter:{title:"Converting from Cake"},sidebar:"tutorialSidebar",previous:{title:"Navigation",permalink:"/docs/global-tool/navigation"},next:{title:"JetBrains Rider",permalink:"/docs/ide/rider"}},p={},u=[{value:"Conversion",id:"conversion",level:2},{value:"Cleanup",id:"cleanup",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Over the years, the .NET community has come up with a lot of great build automation tools, including ",(0,o.kt)("a",{parentName:"p",href:"https://fake.build/"},"FAKE"),", ",(0,o.kt)("a",{parentName:"p",href:"https://cakebuild.net/"},"Cake"),", ",(0,o.kt)("a",{parentName:"p",href:"https://flubucore.dotnetcore.xyz/"},"FlubuCore"),", and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/adamralph/bullseye"},"BullsEye"),". When coming from Cake Scripting, the time for converting build scripts can be greatly reduced with a best-effort approach using ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/dotnet/roslyn"},"Roslyn")," and its ",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/csharp/roslyn-sdk/get-started/syntax-transformation"},"syntax transformation")," capabilities."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The resulting source code is ",(0,o.kt)("strong",{parentName:"p"},"expected to contain compilation errors")," since there is no direct API mapping between Cake and NUKE. Most notably, the order of ",(0,o.kt)("inlineCode",{parentName:"p"},"IsDependentOn")," on a single target in Cake reflects the order of execution of these dependencies, whereas in NUKE the dependencies are solely defined between the individual targets."))),(0,o.kt)("h2",{id:"conversion"},"Conversion"),(0,o.kt)("p",null,"You can start the conversion by calling:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"# terminal-command\nnuke :cake-convert\n")),(0,o.kt)("p",null,"The global tool searches for all ",(0,o.kt)("inlineCode",{parentName:"p"},"*.cake")," and converts them to ",(0,o.kt)("inlineCode",{parentName:"p"},"*.cs")," files. During this process it transforms:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Target definitions"),(0,o.kt)("li",{parentName:"ul"},"Default targets"),(0,o.kt)("li",{parentName:"ul"},"Parameter declarations"),(0,o.kt)("li",{parentName:"ul"},"Path usages"),(0,o.kt)("li",{parentName:"ul"},"Globbing patterns"),(0,o.kt)("li",{parentName:"ul"},"Tool invocations")),(0,o.kt)("p",null,"Additionally \u2013 if you choose to create a build project file \u2013 it will collect NuGet packages from ",(0,o.kt)("inlineCode",{parentName:"p"},"#addin")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"#tool")," directives, and add them as ",(0,o.kt)("inlineCode",{parentName:"p"},"PackageReference")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"PackageDownload")," respectively."),(0,o.kt)("h2",{id:"cleanup"},"Cleanup"),(0,o.kt)("p",null,"After you've fully verified the conversion, you can clear all ",(0,o.kt)("inlineCode",{parentName:"p"},"*.cake")," files by calling:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"# terminal-command\nnuke :cake-clean\n")))}m.isMDXComponent=!0}}]);