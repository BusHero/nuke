"use strict";(self.webpackChunknuke_website=self.webpackChunknuke_website||[]).push([[6891],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),u=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return i.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,g=m["".concat(l,".").concat(d)]||m[d]||c[d]||r;return n?i.createElement(g,s(s({ref:t},p),{},{components:n})):i.createElement(g,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var u=2;u<r;u++)s[u]=n[u];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},44866:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return c}});var i=n(87462),a=n(63366),r=(n(67294),n(3905)),s=["components"],o={title:"Azure Pipelines"},l=void 0,u={unversionedId:"cicd/azure-pipelines",id:"cicd/azure-pipelines",title:"Azure Pipelines",description:"Running on Azure Pipelines will automatically enable custom theming for your build log output including collapsible sections for better structuring:",source:"@site/docs/05-cicd/azure-pipelines.md",sourceDirName:"05-cicd",slug:"/cicd/azure-pipelines",permalink:"/docs/cicd/azure-pipelines",draft:!1,editUrl:"https://github.com/nuke-build/nuke/edit/develop/website/docs/05-cicd/azure-pipelines.md",tags:[],version:"current",lastUpdatedBy:"Matthias Koch",lastUpdatedAt:1655975335,formattedLastUpdatedAt:"6/23/2022",frontMatter:{title:"Azure Pipelines"},sidebar:"tutorialSidebar",previous:{title:"AppVeyor",permalink:"/docs/cicd/appveyor"},next:{title:"Bitbucket",permalink:"/docs/cicd/bitbucket"}},p={},c=[{value:"Environment Variables",id:"environment-variables",level:2},{value:"Configuration Generation",id:"configuration-generation",level:2},{value:"Artifacts",id:"artifacts",level:3},{value:"Importing Secrets",id:"importing-secrets",level:3},{value:"Using Access Tokens",id:"using-access-tokens",level:3},{value:"Caching",id:"caching",level:3}],m={toc:c};function d(e){var t=e.components,o=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,i.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Running on ",(0,r.kt)("a",{parentName:"p",href:"https://azure.microsoft.com/en-us/services/devops/pipelines/"},"Azure Pipelines")," will automatically enable custom theming for your build log output including ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands#formatting-commands"},"collapsible sections")," for better structuring:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Azure Pipelines Log Output",src:n(79494).Z,width:"1960",height:"1222"})),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Please refer to the official ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/devops/pipelines/?view=azure-devops"},"Azure Pipelines documentation")," for questions not covered here."))),(0,r.kt)("h2",{id:"environment-variables"},"Environment Variables"),(0,r.kt)("p",null,"You can access ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables"},"predefined environment variables")," by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"AzurePipelines")," class:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'AzurePipelines AzurePipelines => AzurePipelines.Instance;\n\nTarget Print => _ => _\n    .Executes(() =>\n    {\n        Log.Information("Branch = {Branch}", AzurePipelines.SourceBranch);\n        Log.Information("Commit = {Commit}", AzurePipelines.SourceVersion);\n    });\n')),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Exhaustive list of strongly-typed properties"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"class AzurePipelines\n{\n    string                       AccessToken                    { get; }\n    string                       AgentBuildDirectory            { get; }\n    string                       AgentHomeDirectory             { get; }\n    long                         AgentId                        { get; }\n    AzurePipelinesJobStatus      AgentJobStatus                 { get; }\n    string                       AgentMachineName               { get; }\n    string                       AgentName                      { get; }\n    string                       AgentWorkFolder                { get; }\n    string                       ArtifactStagingDirectory       { get; }\n    string                       BinariesDirectory              { get; }\n    long                         BuildId                        { get; }\n    string                       BuildNumber                    { get; }\n    AzurePipelinesBuildReason    BuildReason                    { get; }\n    string                       BuildUri                       { get; }\n    Guid                         CollectionId                   { get; }\n    string                       DefaultWorkingDirectory        { get; }\n    long                         DefinitionId                   { get; }\n    string                       DefinitionName                 { get; }\n    long                         DefinitionVersion              { get; }\n    string                       JobDisplayName                 { get; }\n    Guid                         JobId                          { get; }\n    string                       PhaseName                      { get; }\n    long?                        PullRequestId                  { get; }\n    string                       PullRequestSourceBranch        { get; }\n    string                       PullRequestTargetBranch        { get; }\n    string                       QueuedBy                       { get; }\n    Guid                         QueuedById                     { get; }\n    bool                         RepositoryClean                { get; }\n    bool                         RepositoryGitSubmoduleCheckout { get; }\n    string                       RepositoryLocalPath            { get; }\n    string                       RepositoryName                 { get; }\n    AzurePipelinesRepositoryType RepositoryProvider             { get; }\n    string                       RepositoryTfvcWorkspace        { get; }\n    string                       RepositoryUri                  { get; }\n    string                       RequestedFor                   { get; }\n    string                       RequestedForEmail              { get; }\n    Guid                         RequestedForId                 { get; }\n    string                       SourceBranch                   { get; }\n    string                       SourceBranchName               { get; }\n    string                       SourceDirectory                { get; }\n    string                       SourceTfvcShelveset            { get; }\n    string                       SourceVersion                  { get; }\n    string                       StageDisplayName               { get; }\n    string                       StageName                      { get; }\n    string                       StagingDirectory               { get; }\n    Guid                         TaskInstanceId                 { get; }\n    string                       TeamFoundationCollectionUri    { get; }\n    string                       TeamProject                    { get; }\n    Guid                         TeamProjectId                  { get; }\n    string                       TestResultsDirectory           { get; }\n}\n"))),(0,r.kt)("h2",{id:"configuration-generation"},"Configuration Generation"),(0,r.kt)("p",null,"You can generate ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/devops/pipelines/create-first-pipeline"},"build pipeline files")," from your existing target definitions by adding the ",(0,r.kt)("inlineCode",{parentName:"p"},"AzurePipelines")," attribute. For instance, you can run the ",(0,r.kt)("inlineCode",{parentName:"p"},"Compile")," target on every push with the latest Ubuntu image: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},"[AzurePipelines(\n    AzurePipelinesImage.UbuntuLatest,\n    InvokedTargets = new[] { nameof(Compile) })]\nclass Build : NukeBuild { /* ... */ }\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="azure-pipelines.yml"',title:'"azure-pipelines.yml"'},"stages:\n  - stage: ubuntu_latest\n    displayName: 'ubuntu-latest'\n    pool:\n      vmImage: 'ubuntu-latest'\n    jobs:\n      - job: Compile\n        displayName: 'Compile'\n        steps:\n          - task: CmdLine@2\n            inputs:\n              script: './build.cmd Compile --skip'\n"))),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Whenever you make changes to the attribute, you have to ",(0,r.kt)("a",{parentName:"p",href:"/docs/getting-started/execution"},"run the build")," at least once to regenerate the pipelines file."))),(0,r.kt)("h3",{id:"artifacts"},"Artifacts"),(0,r.kt)("p",null,"If your targets produce artifacts, like packages or coverage reports, you can publish those directly from the target definition:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'Target Pack => _ => _\n    .Produces(PackagesDirectory / "*.nupkg")\n    .Executes(() => { /* Implementation */ });\n')),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="azure-pipelines.yml"',title:'"azure-pipelines.yml"'},"- task: PublishBuildArtifacts@1\n  inputs:\n    artifactName: packages\n    pathtoPublish: 'output/packages'\n"))),(0,r.kt)("p",null,"After your build has finished, those artifacts will be listed under the artifacts tab:"),(0,r.kt)("p",{style:{maxWidth:"900px"}},(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Azure Pipelines Artifacts Tab",src:n(10553).Z+"#gh-light-mode-only",width:"2010",height:"694"}),"\n",(0,r.kt)("img",{alt:"Azure Pipelines Artifacts Tab",src:n(22997).Z+"#gh-dark-mode-only",width:"2008",height:"686"}))),(0,r.kt)("h3",{id:"importing-secrets"},"Importing Secrets"),(0,r.kt)("p",null,"If you want to use ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables#secret-variables"},"secret variables")," from your repository, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ImportSecrets")," property to automatically load them into a ",(0,r.kt)("a",{parentName:"p",href:"/docs/fundamentals/parameters#secret-parameters"},"secret parameter")," defined in your build:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},"[AzurePipelines(\n    // ...\n    ImportSecrets = new[] { nameof(NuGetApiKey) })]\nclass Build : NukeBuild\n{\n    [Parameter] [Secret] readonly string NuGetApiKey;\n}\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="azure-pipelines.yml"',title:'"azure-pipelines.yml"'},"- task: CmdLine@2\n  inputs:\n    script: './build.cmd Publish --skip'\n  env:\n    NuGetApiKey: $(NuGetApiKey)\n"))),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you're facing any issues, make sure that the name in the Azure Pipelines settings is the same as generated into the pipelines file. "))),(0,r.kt)("h3",{id:"using-access-tokens"},"Using Access Tokens"),(0,r.kt)("p",null,"For every pipeline run, Azure Pipelines generates a ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/devops/pipelines/process/access-tokens"},"one-time token")," with ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/devops/pipelines/process/access-tokens#manage-build-service-account-permissions"},"adequate permissions")," that you can use to authenticate with the Azure Pipelines API. You can enable the access token in the attribute as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'[AzurePipelines(\n    // ...\n    EnableAccessToken = true)]\nclass Build : NukeBuild\n{\n    AzurePipelines AzurePipelines => AzurePipelines.Instance;\n\n    Target Request => _ => _\n        .Executes(() =>\n        {\n            Log.Information("Access Token = {Token}", AzurePipelines.AccessToken);\n        });\n}\n')),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="azure-pipelines.yml"',title:'"azure-pipelines.yml"'},"- task: CmdLine@2\n  inputs:\n    script: './build.cmd Release --skip'\n  env:\n    SYSTEM_ACCESSTOKEN: $(System.AccessToken)\n\n"))),(0,r.kt)("h3",{id:"caching"},"Caching"),(0,r.kt)("p",null,"By default, the generated pipeline file will include ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/devops/pipelines/release/caching"},"caching tasks")," to reduce the time for installing the .NET SDK (if not preinstalled) and restoring NuGet packages."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="azure-pipelines.yml"',title:'"azure-pipelines.yml"'},"- task: Cache@2\n  displayName: Cache (nuke-temp)\n  inputs:\n    key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj\n    restoreKeys: $(Agent.OS) | nuke-temp\n    path: .nuke/temp\n- task: Cache@2\n  displayName: Cache (nuget-packages)\n  inputs:\n    key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj\n    restoreKeys: $(Agent.OS) | nuget-packages\n    path: $(HOME)/.nuget/packages\n"))),(0,r.kt)("p",null,"You can customize the caching tasks by overwriting the following properties:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'[AzurePipelines(\n    // ...\n    CacheKeyFiles = new[] { "**/global.json", "**/*.csproj" },\n    CachePaths = new[]\n    {\n        AzurePipelinesCachePaths.Nuke,\n        AzurePipelinesCachePaths.NuGet\n    })]\nclass Build : NukeBuild { /* ... */ }\n')))}d.isMDXComponent=!0},22997:function(e,t,n){t.Z=n.p+"assets/images/azure-pipelines-artifacts-dark-12b5992987b1063641a4c9466db4caed.webp"},10553:function(e,t,n){t.Z=n.p+"assets/images/azure-pipelines-artifacts-light-7d9be058116d36e491475c3d0b527f00.webp"},79494:function(e,t,n){t.Z=n.p+"assets/images/azure-pipelines-e354cde33a35cf2ce5ce4c75a0f125c8.webp"}}]);