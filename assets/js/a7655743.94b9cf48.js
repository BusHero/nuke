"use strict";(self.webpackChunknuke_website=self.webpackChunknuke_website||[]).push([[238],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return g}});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=m(a),g=i,d=u["".concat(s,".").concat(g)]||u[g]||c[g]||o;return a?n.createElement(d,r(r({ref:t},p),{},{components:a})):n.createElement(d,r({ref:t},p))}));function g(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var m=2;m<o;m++)r[m]=a[m];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},72360:function(e,t,a){a.d(t,{Z:function(){return r}});var n=a(67294),i=a(86010),o="tabItem_OmH5";function r(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",className:(0,i.Z)(o,r),hidden:a},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return g}});var n=a(87462),i=a(67294),o=a(72389),r=a(67392),l=a(7094),s=a(12466),m=a(86010),p="tabList_uSqn",c="tabItem_LplD";function u(e){var t,a,o,u=e.lazy,g=e.block,d=e.defaultValue,h=e.values,f=e.groupId,v=e.className,k=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=h?h:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),w=(0,r.l)(b,(function(e,t){return e.value===t.value}));if(w.length>0)throw new Error('Docusaurus error: Duplicate values "'+w.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var N=null===d?d:null!=(t=null!=d?d:null==(a=k.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(o=k[0])?void 0:o.props.value;if(null!==N&&!b.some((function(e){return e.value===N})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,l.U)(),T=y.tabGroupChoices,C=y.setTabGroupChoices,x=(0,i.useState)(N),L=x[0],O=x[1],E=[],I=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var Z=T[f];null!=Z&&Z!==L&&b.some((function(e){return e.value===Z}))&&O(Z)}var M=function(e){var t=e.currentTarget,a=E.indexOf(t),n=b[a].value;n!==L&&(I(t),O(n),null!=f&&C(f,n))},D=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=E.indexOf(e.currentTarget)+1;a=E[n]||E[0];break;case"ArrowLeft":var i=E.indexOf(e.currentTarget)-1;a=E[i]||E[E.length-1]}null==(t=a)||t.focus()};return i.createElement("div",{className:(0,m.Z)("tabs-container",p)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,m.Z)("tabs",{"tabs--block":g},v)},b.map((function(e){var t=e.value,a=e.label,o=e.attributes;return i.createElement("li",(0,n.Z)({role:"tab",tabIndex:L===t?0:-1,"aria-selected":L===t,key:t,ref:function(e){return E.push(e)},onKeyDown:D,onFocus:M,onClick:M},o,{className:(0,m.Z)("tabs__item",c,null==o?void 0:o.className,{"tabs__item--active":L===t})}),null!=a?a:t)}))),u?(0,i.cloneElement)(k.filter((function(e){return e.props.value===L}))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},k.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==L})}))))}function g(e){var t=(0,o.Z)();return i.createElement(u,(0,n.Z)({key:String(t)},e))}},78136:function(e,t,a){a.r(t),a.d(t,{assets:function(){return g},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return d}});var n=a(87462),i=a(63366),o=(a(67294),a(3905)),r=a(9877),l=a(72360),s=a(55670),m=["components"],p={title:"Logging"},c=void 0,u={unversionedId:"fundamentals/logging",id:"fundamentals/logging",title:"Logging",description:"As with any other application, good logging greatly reduces the time to detect the source of errors and fix them quickly. NUKE integrates with Serilog and prepares a console and file logger for you. Most functions with side effects will automatically log their performed actions. This also includes invocations of CLI tools. Of course, you can also add your own log messages:",source:"@site/docs/02-fundamentals/10-logging.md",sourceDirName:"02-fundamentals",slug:"/fundamentals/logging",permalink:"/docs/fundamentals/logging",draft:!1,editUrl:"https://github.com/nuke-build/nuke/edit/develop/website/docs/02-fundamentals/10-logging.md",tags:[],version:"current",lastUpdatedBy:"Matthias Koch",lastUpdatedAt:1655975335,formattedLastUpdatedAt:"6/23/2022",sidebarPosition:10,frontMatter:{title:"Logging"},sidebar:"tutorialSidebar",previous:{title:"Parameters",permalink:"/docs/fundamentals/parameters"},next:{title:"Assertions",permalink:"/docs/fundamentals/assertions"}},g={},d=[{value:"Console Sink",id:"console-sink",level:2},{value:"File Sinks",id:"file-sinks",level:2},{value:"Comparing Log Files",id:"comparing-log-files",level:3}],h={toc:d};function f(e){var t=e.components,p=(0,i.Z)(e,m);return(0,o.kt)("wrapper",(0,n.Z)({},h,p,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"As with any other application, good logging greatly reduces the time to detect the source of errors and fix them quickly. NUKE integrates with ",(0,o.kt)("a",{parentName:"p",href:"https://serilog.net/"},"Serilog")," and prepares a console and file logger for you. Most functions with side effects will automatically log their performed actions. This also includes ",(0,o.kt)("a",{parentName:"p",href:"/docs/common/cli-tools"},"invocations of CLI tools"),". Of course, you can also add your own log messages:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'// using Serilog;\n\nLog.Verbose("This is a verbose message");\nLog.Debug("This is a debug message");\nLog.Information("This is an information message");\nLog.Warning("This is a warning message");\nLog.Error("This is an error message");\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"For error messages, you most certainly want to use ",(0,o.kt)("a",{parentName:"p",href:"/docs/fundamentals/assertions"},"assertions")," instead to also fail the build."))),(0,o.kt)("h2",{id:"console-sink"},"Console Sink"),(0,o.kt)("p",null,"Based on your IDE and CI/CD service, the console sink is automatically configured with the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/serilog/serilog-sinks-console#themes"},"best-looking themes"),". When your terminal supports ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/ANSI_escape_code"},"ANSI colors")," (",(0,o.kt)("inlineCode",{parentName:"p"},"TERM=xterm"),"), an ANSI theme is chosen. Otherwise, a simple ",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.consolecolor"},"system-color")," theme is used."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Adaptive themes are particularly great for consistent colors in your CI/CD environment."))),(0,o.kt)("p",null,"Log messages are only written to console when the appropriate ",(0,o.kt)("inlineCode",{parentName:"p"},"LogLevel")," is set. You can change it by passing the ",(0,o.kt)("inlineCode",{parentName:"p"},"--verbosity")," parameter:"),(0,o.kt)(r.Z,{groupId:"logging",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"trace",label:"Verbose",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"# terminal-command\nnuke --verbosity verbose\n"))),(0,o.kt)(l.Z,{value:"normal",label:"Normal",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"# terminal-command\nnuke --verbosity normal\n"))),(0,o.kt)(l.Z,{value:"warning",label:"Minimal",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"# terminal-command\nnuke --verbosity minimal\n"))),(0,o.kt)(l.Z,{value:"error",label:"Quiet",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"# terminal-command\nnuke --verbosity quiet\n")))),(0,o.kt)("p",null,"Or by setting it directly in the build implementation:"),(0,o.kt)(r.Z,{groupId:"logging",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"trace",label:"Trace",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"Logging.Level = LogLevel.Trace;\n"))),(0,o.kt)(l.Z,{value:"normal",label:"Normal",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"Logging.Level = LogLevel.Normal;\n"))),(0,o.kt)(l.Z,{value:"warning",label:"Warning",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"Logging.Level = LogLevel.Warning;\n"))),(0,o.kt)(l.Z,{value:"error",label:"Error",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"Logging.Level = LogLevel.Error;\n")))),(0,o.kt)("p",null,"In the following image you can see that the verbose message is hidden because the current log level was set to ",(0,o.kt)("inlineCode",{parentName:"p"},"Normal"),":"),(0,o.kt)("p",{style:{maxWidth:"380px"}},(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Logging Output in Console",src:a(41041).Z+"#gh-light-mode-only",width:"730",height:"364"}),"\n",(0,o.kt)("img",{alt:"Logging Output in Console",src:a(81834).Z+"#gh-dark-mode-only",width:"738",height:"366"}))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Error and warning log messages are repeated right before the ",(0,o.kt)("a",{parentName:"p",href:"/docs/getting-started/execution#build-summary"},"build summary")," to give you a quick-look at what went wrong."))),(0,o.kt)("h2",{id:"file-sinks"},"File Sinks"),(0,o.kt)("p",null,"For each build, a new log file is written to the temporary directory. The Serilog message template is pre-configured as:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Message Template"',title:'"Message','Template"':!0},"{Timestamp:HH:mm:ss.fff} | {Level:u1} | {Target} | {Message:l}{{NewLine}{{Exception}\n")),(0,o.kt)("p",null,"With the sample logging from above, the file would like roughly like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-log",metastring:'title=".nuke/temp/build.log"',title:'".nuke/temp/build.log"'},"03:57:38.208 | V | Compile | This is a verbose message\n03:57:38.208 | D | Compile | This is a debug message\n03:57:38.208 | I | Compile | This is an information message\n03:57:38.208 | W | Compile | This is a warning message\n03:57:38.208 | E | Compile | This is an error message\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"With the ",(0,o.kt)("a",{parentName:"p",href:"https://plugins.jetbrains.com/plugin/9746-ideolog"},"Ideolog plugin")," for ",(0,o.kt)("a",{parentName:"p",href:"https://jetbrains.com/rider/"},"JetBrains Rider")," you can view and inspect log files more comfortably. It automatically highlights messages according to their log level, allows collapsing irrelevant messages based on search terms, and will enable navigation for exception stack traces."),(0,o.kt)("p",{style:{maxWidth:"680px",marginBottom:"-24px"}},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("img",{alt:"Ideolog plugin in JetBrains Rider",src:a(49568).Z+"#gh-light-mode-only",width:"1284",height:"494"}),"\n",(0,o.kt)("img",{alt:"Ideolog plugin in JetBrains Rider",src:a(86749).Z+"#gh-dark-mode-only",width:"1276",height:"494"}))))),(0,o.kt)("h3",{id:"comparing-log-files"},"Comparing Log Files"),(0,o.kt)("p",null,"For the purpose of log comparison, local builds will create another log file with the current timestamp in its name but without the timestamp in the message template:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Message Template"',title:'"Message','Template"':!0},"{Level:u1} | {Target} | {Message:l}{NewLine}{Exception}\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Only the last 5 build logs are kept."))),(0,o.kt)("p",null,"With the same sample logging from above, the file now looks like this:"),(0,o.kt)(s.Z,{title:".nuke/temp/build."+(new Date).toISOString().substring(0,19).replace("T","_").replace(":","-").replace(":","-")+".log",mdxType:"CodeBlock"},"\nV | Compile | This is a verbose message\nD | Compile | This is a debug message\nI | Compile | This is an information message\nW | Compile | This is a warning message\nE | Compile | This is an error message\n".trim()),(0,o.kt)("p",null,"With the comparison tool of your choice, you can then select two files and compare them. For instance, when you remove the debug message and add another warning message, the comparison tool will show the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="Diff Output"',title:'"Diff','Output"':!0},"  V | Compile | This is a verbose message\n- D | Compile | This is a debug message\n  I | Compile | This is an information message\n  W | Compile | This is a warning message\n+ W | Compile | This is another warning message\n  E | Compile | This is an error message\n")))}f.isMDXComponent=!0},81834:function(e,t,a){t.Z=a.p+"assets/images/logging-console-dark-9b8d1a38f7d83df9b577f46dbb011a1e.webp"},41041:function(e,t,a){t.Z=a.p+"assets/images/logging-console-light-dfb435d534da1813281a7975e5c0ab02.webp"},86749:function(e,t,a){t.Z=a.p+"assets/images/logging-ideolog-dark-8278f574fe7b32a84c7733ea510b2cbf.webp"},49568:function(e,t,a){t.Z=a.p+"assets/images/logging-ideolog-light-dc036eee5379d064e166b14b6397f09f.webp"}}]);