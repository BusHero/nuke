"use strict";(self.webpackChunknuke_website=self.webpackChunknuke_website||[]).push([[2278],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return p}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(t),p=r,v=m["".concat(l,".").concat(p)]||m[p]||d[p]||i;return t?a.createElement(v,o(o({ref:n},u),{},{components:t})):a.createElement(v,o({ref:n},u))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},72360:function(e,n,t){t.d(n,{Z:function(){return o}});var a=t(67294),r=t(86010),i="tabItem_OmH5";function o(e){var n=e.children,t=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:t},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return p}});var a=t(87462),r=t(67294),i=t(72389),o=t(67392),s=t(7094),l=t(12466),c=t(86010),u="tabList_uSqn",d="tabItem_LplD";function m(e){var n,t,i,m=e.lazy,p=e.block,v=e.defaultValue,g=e.values,h=e.groupId,f=e.className,b=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=g?g:b.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),N=(0,o.l)(k,(function(e,n){return e.value===n.value}));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===v?v:null!=(n=null!=v?v:null==(t=b.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(i=b[0])?void 0:i.props.value;if(null!==y&&!k.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,s.U)(),V=w.tabGroupChoices,T=w.setTabGroupChoices,x=(0,r.useState)(y),I=x[0],M=x[1],O=[],P=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var E=V[h];null!=E&&E!==I&&k.some((function(e){return e.value===E}))&&M(E)}var G=function(e){var n=e.currentTarget,t=O.indexOf(n),a=k[t].value;a!==I&&(P(n),M(a),null!=h&&T(h,a))},j=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=O.indexOf(e.currentTarget)+1;t=O[a]||O[0];break;case"ArrowLeft":var r=O.indexOf(e.currentTarget)-1;t=O[r]||O[O.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,c.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":p},f)},k.map((function(e){var n=e.value,t=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:I===n?0:-1,"aria-selected":I===n,key:n,ref:function(e){return O.push(e)},onKeyDown:j,onFocus:G,onClick:G},i,{className:(0,c.Z)("tabs__item",d,null==i?void 0:i.className,{"tabs__item--active":I===n})}),null!=t?t:n)}))),m?(0,r.cloneElement)(b.filter((function(e){return e.props.value===I}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==I})}))))}function p(e){var n=(0,i.Z)();return r.createElement(m,(0,a.Z)({key:String(n)},e))}},14003:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return p}});var a=t(87462),r=t(63366),i=(t(67294),t(3905)),o=t(9877),s=t(72360),l=["components"],c={title:"Versioning Artifacts"},u=void 0,d={unversionedId:"common/versioning",id:"common/versioning",title:"Versioning Artifacts",description:"Whenever a build produces artifacts, those should be identifiable with a unique version number. This avoids making wrong expectations about available features or fixed bugs, and allows for clear discussions between developers, QA team, and product users. The most common version approaches are are semantic versioning and calendar versioning.",source:"@site/docs/03-common/06-versioning.md",sourceDirName:"03-common",slug:"/common/versioning",permalink:"/docs/common/versioning",draft:!1,editUrl:"https://github.com/nuke-build/nuke/edit/develop/website/docs/03-common/06-versioning.md",tags:[],version:"current",lastUpdatedBy:"Matthias Koch",lastUpdatedAt:1656276144,formattedLastUpdatedAt:"6/26/2022",sidebarPosition:6,frontMatter:{title:"Versioning Artifacts"},sidebar:"tutorialSidebar",previous:{title:"Data Serialization",permalink:"/docs/common/serialization"},next:{title:"Solution & Project Model",permalink:"/docs/common/solution-project-model"}},m={},p=[{value:"Repository-based Versioning",id:"repository-based-versioning",level:2},{value:"Dependency-based Versioning",id:"dependency-based-versioning",level:2},{value:"Related Resources",id:"related-resources",level:2}],v={toc:p};function g(e){var n=e.components,t=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},v,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Whenever a build produces artifacts, those should be identifiable with a unique version number. This avoids making wrong expectations about available features or fixed bugs, and allows for clear discussions between developers, QA team, and product users. The most common version approaches are are ",(0,i.kt)("a",{parentName:"p",href:"https://semver.org/"},"semantic versioning")," and ",(0,i.kt)("a",{parentName:"p",href:"https://calver.org/"},"calendar versioning"),"."),(0,i.kt)("h2",{id:"repository-based-versioning"},"Repository-based Versioning"),(0,i.kt)("p",null,"NUKE supports 4 different tools that help generating version numbers from your repository and its commits. Each of these tools comes with its own attribute that populates the field with the information calculated:"),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"gitversion",label:"GitVersion",default:!0,mdxType:"TabItem"},(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Please refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://gitversion.net/docs/reference/configuration"},"GitVersion documentation")," for any questions."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell",metastring:'title="Tool Installation"',title:'"Tool','Installation"':!0},"# terminal-command\nnuke :add-package GitVersion.Tool\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'[GitVersion]\nreadonly GitVersion GitVersion;\n\nTarget Print => _ => _\n    .Executes(() =>\n    {\n        Log.Information("GitVersion = {Value}", GitVersion.MajorMinorPatch);\n    });\n'))),(0,i.kt)(s.Z,{value:"nerdbank",label:"Nerdbank",mdxType:"TabItem"},(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Please refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/dotnet/Nerdbank.GitVersioning/blob/master/doc/versionJson.md"},"Nerdbank.GitVersioning documentation")," for any questions."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell",metastring:'title="Tool Installation"',title:'"Tool','Installation"':!0},"# terminal-command\nnuke :add-package Nerdbank.GitVersioning\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'[NerdbankGitVersioning]\nreadonly NerdbankGitVersioning NerdbankVersioning;\n\nTarget Print => _ => _\n    .Executes(() =>\n    {\n        Log.Information("NerdbankVersioning = {Value}", NerdbankVersioning.SimpleVersion);\n    });\n'))),(0,i.kt)(s.Z,{value:"octoversion",label:"OctoVersion",mdxType:"TabItem"},(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Please refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/OctopusDeploy/OctoVersion#configuration"},"OctoVersion documentation")," for any questions."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell",metastring:'title="Tool Installation"',title:'"Tool','Installation"':!0},"# terminal-command\nnuke :add-package OctoVersion.Tool\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'[OctoVersion]\nreadonly OctoVersionInfo OctoVersionInfo;\n\nTarget Print => _ => _\n    .Executes(() =>\n    {\n        Log.Information("OctoVersionInfo = {Value}", OctoVersionInfo.MajorMinorPatch);\n    });\n'))),(0,i.kt)(s.Z,{value:"minver",label:"MinVer",mdxType:"TabItem"},(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Please refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/adamralph/minver#usage"},"MinVer documentation")," for any questions."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell",metastring:'title="Tool Installation"',title:'"Tool','Installation"':!0},"# terminal-command\nnuke :add-package MinVer\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'[MinVer]\nreadonly MinVer MinVer;\n\nTarget Print => _ => _\n    .Executes(() =>\n    {\n        Log.Information("MinVer = {Value}", MinVer.Version);\n    });\n')))),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Note that when the versioning tool fails to calculate version numbers, a warning will be logged and the attributed field remains uninitialized. In that case, you can try executing the issued command manually or ",(0,i.kt)("inlineCode",{parentName:"p"},"nuke --verbosity verbose")," to reveal more detailed information. In most cases, the repository is either not initialized, has no commits, or is missing the tool-specific configuration file."))),(0,i.kt)("h2",{id:"dependency-based-versioning"},"Dependency-based Versioning"),(0,i.kt)("p",null,"When your versioning is affected by external dependencies, NUKE provides another mechanism to load the latest version of those prior to build execution. Each attribute provides various properties to control which versions should be considered and how it should be transformed:"),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"nuget",label:"NuGet\xa0Packages",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'[LatestNuGetVersion(\n    packageId: "JetBrains.ReSharper.SDK",\n    IncludePrerelease = true)]\nreadonly NuGetVersion ReSharperVersion;\n\nTarget Print => _ => _\n    .Executes(() =>\n    {\n        Log.Information("ReSharperVersion = {Value}", ReSharperVersion);\n    });\n'))),(0,i.kt)(s.Z,{value:"github",label:"GitHub\xa0Releases",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'[LatestGitHubRelease(\n    identifier: "JetBrains/gradle-intellij-plugin",\n    TrimPrefix = true)]\nreadonly string GradlePluginVersion;\n\nTarget Print => _ => _\n    .Executes(() =>\n    {\n        Log.Information("GradlePluginVersion = {Value}", GradlePluginVersion);\n    });\n'))),(0,i.kt)(s.Z,{value:"myget",label:"MyGet\xa0Feeds",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'[LatestMyGetVersion(\n    feed: "rd-snapshots",\n    package: "rd-gen")]\nreadonly string RdGenVersion;\n\nTarget Print => _ => _\n    .Executes(() =>\n    {\n        Log.Information("RdGenVersion = {Value}", RdGenVersion);\n    });\n'))),(0,i.kt)(s.Z,{value:"maven",label:"Maven\xa0Packages",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'[LatestMavenVersion(\n    repository: "plugins.gradle.org",\n    groupId: "org.jetbrains.kotlin.jvm",\n    artifactId: "org.jetbrains.kotlin.jvm.gradle.plugin")]\nreadonly string KotlinJvmVersion;\n\nTarget Print => _ => _\n    .Executes(() =>\n    {\n        Log.Information("KotlinJvmVersion = {Value}", KotlinJvmVersion);\n    });\n')))),(0,i.kt)("h2",{id:"related-resources"},"Related Resources"),(0,i.kt)("p",null,"You can learn more about different versioning aspects from the following resources:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://codeblog.jonskeet.uk/2019/10/20/why-i-dont-start-versions-at-0-x-any-more/"},"Why I don't start versions at 0.x any more")," by Jon Skeet"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=GLr72TnSnPw"},"Versioning, and how it makes our heads hurt")," by Jon Skeet")))}g.isMDXComponent=!0}}]);