"use strict";(self.webpackChunknuke_website=self.webpackChunknuke_website||[]).push([[1175],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return g}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(n),g=i,m=d["".concat(s,".").concat(g)]||d[g]||p[g]||a;return n?r.createElement(m,o(o({ref:t},l),{},{components:n})):r.createElement(m,o({ref:t},l))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},41697:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=["components"],c={title:"Bitbucket"},s=void 0,u={unversionedId:"cicd/bitbucket",id:"cicd/bitbucket",title:"Bitbucket",description:"Running on Bitbucket will use the standard theming for your build log output.",source:"@site/docs/05-cicd/bitbucket.md",sourceDirName:"05-cicd",slug:"/cicd/bitbucket",permalink:"/docs/cicd/bitbucket",draft:!1,editUrl:"https://github.com/nuke-build/nuke/edit/develop/website/docs/05-cicd/bitbucket.md",tags:[],version:"current",lastUpdatedBy:"Matthias Koch",lastUpdatedAt:1656276144,formattedLastUpdatedAt:"6/26/2022",frontMatter:{title:"Bitbucket"},sidebar:"tutorialSidebar",previous:{title:"Azure Pipelines",permalink:"/docs/cicd/azure-pipelines"},next:{title:"GitHub Actions",permalink:"/docs/cicd/github-actions"}},l={},p=[{value:"Environment Variables",id:"environment-variables",level:2}],d={toc:p};function g(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Running on ",(0,a.kt)("a",{parentName:"p",href:"https://bitbucket.org/"},"Bitbucket")," will use the standard theming for your build log output."),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Please refer to the official ",(0,a.kt)("a",{parentName:"p",href:"https://confluence.atlassian.com/bitbucketserver/"},"Bitbucket documentation")," for questions not covered here."))),(0,a.kt)("h2",{id:"environment-variables"},"Environment Variables"),(0,a.kt)("p",null,"You can access ",(0,a.kt)("a",{parentName:"p",href:"https://support.atlassian.com/bitbucket-cloud/docs/variables-and-secrets/"},"predefined environment variables")," by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"Bitbucket")," class:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'Bitbucket Bitbucket => Bitbucket.Instance;\n\nTarget Print => _ => _\n    .Executes(() =>\n    {\n        Log.Information("Branch = {Branch}", Bitbucket.Branch);\n        Log.Information("Commit = {Commit}", Bitbucket.Commit);\n    });\n')),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Exhaustive list of strongly-typed properties"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"class Bitbucket\n{\n    string Bookmark                     { get; }\n    string Branch                       { get; }\n    long   BuildNumber                  { get; }\n    string CloneDirectory               { get; }\n    string Commit                       { get; }\n    string DeploymentEnvironment        { get; }\n    string DeploymentEnvironmentUuid    { get; }\n    string ExitCode                     { get; }\n    string GitHttpOrigin                { get; }\n    string GitSshOrigin                 { get; }\n    int    ParallelStep                 { get; }\n    int    ParallelStepCount            { get; }\n    string PipelineUuid                 { get; }\n    string ProjectKey                   { get; }\n    string ProjectUuid                  { get; }\n    string PullRequestDestinationBranch { get; }\n    int    PullRequestId                { get; }\n    string RepositoryFullName           { get; }\n    string RepositorySlug               { get; }\n    string RepositoryUuid               { get; }\n    string StepOidcToken                { get; }\n    string StepTriggererUuid            { get; }\n    string StepUuid                     { get; }\n    string Tag                          { get; }\n    string Workspace                    { get; }\n}\n"))))}g.isMDXComponent=!0}}]);