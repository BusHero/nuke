"use strict";(self.webpackChunknuke_website=self.webpackChunknuke_website||[]).push([[7705],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=c(n),d=i,g=p["".concat(l,".").concat(d)]||p[d]||u[d]||r;return n?a.createElement(g,s(s({ref:t},m),{},{components:n})):a.createElement(g,s({ref:t},m))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},18787:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var a=n(87462),i=n(63366),r=(n(67294),n(3905)),s=["components"],o={title:"TeamCity"},l=void 0,c={unversionedId:"cicd/teamcity",id:"cicd/teamcity",title:"TeamCity",description:"Running on TeamCity will automatically enable custom theming for your build log output including collapsible blocks for better structuring:",source:"@site/docs/05-cicd/teamcity.md",sourceDirName:"05-cicd",slug:"/cicd/teamcity",permalink:"/docs/cicd/teamcity",draft:!1,editUrl:"https://github.com/nuke-build/nuke/edit/develop/website/docs/05-cicd/teamcity.md",tags:[],version:"current",lastUpdatedBy:"Matthias Koch",lastUpdatedAt:1655975335,formattedLastUpdatedAt:"6/23/2022",frontMatter:{title:"TeamCity"},sidebar:"tutorialSidebar",previous:{title:"Space Automation",permalink:"/docs/cicd/space-automation"},next:{title:"Shell Completion",permalink:"/docs/global-tool/shell-completion"}},m={},u=[{value:"Environment Variables",id:"environment-variables",level:2},{value:"Configuration Generation",id:"configuration-generation",level:2},{value:"Artifacts",id:"artifacts",level:3},{value:"Importing Secrets",id:"importing-secrets",level:3},{value:"Using Credentials",id:"using-credentials",level:2}],p={toc:u};function d(e){var t=e.components,o=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Running on ",(0,r.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/teamcity/"},"TeamCity")," will automatically enable custom theming for your build log output including ",(0,r.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/help/teamcity/service-messages.html#Blocks+of+Service+Messages"},"collapsible blocks")," for better structuring:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"TeamCity Log Output",src:n(52506).Z+"#gh-light-mode-only",width:"1882",height:"1018"}),"\n",(0,r.kt)("img",{alt:"TeamCity Log Output",src:n(72578).Z+"#gh-dark-mode-only",width:"1882",height:"1020"})),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Please refer to the official ",(0,r.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/help/teamcity/teamcity-documentation.html"},"TeamCity documentation")," for questions not covered here."))),(0,r.kt)("h2",{id:"environment-variables"},"Environment Variables"),(0,r.kt)("p",null,"You can access ",(0,r.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/help/teamcity/predefined-build-parameters.html"},"predefined parameters")," by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"TeamCity")," class:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'TeamCity TeamCity => TeamCity.Instance;\n\nTarget Print => _ => _\n    .Executes(() =>\n    {\n        Log.Information("Branch = {Branch}", TeamCity.BranchName);\n        Log.Information("Commit = {Commit}", TeamCity.BuildVcsNumber);\n    });\n')),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Exhaustive list of strongly-typed properties"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"class TeamCity\n{\n    string                              AuthPassword            { get; }\n    string                              AuthUserId              { get; }\n    string                              BranchName              { get; }\n    string                              BuildConfiguration      { get; }\n    long                                BuildId                 { get; }\n    string                              BuildNumber             { get; }\n    string                              BuildTypeId             { get; }\n    string                              BuildVcsNumber          { get; }\n    IReadOnlyDictionary<string, string> ConfigurationProperties { get; }\n    bool                                IsBuildPersonal         { get; }\n    bool                                IsPullRequest           { get; }\n    string                              ProjectId               { get; }\n    string                              ProjectName             { get; }\n    long?                               PullRequestNumber       { get; }\n    string                              PullRequestSourceBranch { get; }\n    string                              PullRequestTargetBranch { get; }\n    string                              PullRequestTitle        { get; }\n    IReadOnlyCollection<string>         RecentlyFailedTests     { get; }\n    IReadOnlyDictionary<string, string> RunnerProperties        { get; }\n    string                              ServerUrl               { get; }\n    IReadOnlyDictionary<string, string> SystemProperties        { get; }\n    string                              Version                 { get; }\n}\n"))),(0,r.kt)("h2",{id:"configuration-generation"},"Configuration Generation"),(0,r.kt)("p",null,"You can generate ",(0,r.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/help/teamcity/kotlin-dsl.html"},"build configuration files")," from your existing target definitions by adding the ",(0,r.kt)("inlineCode",{parentName:"p"},"TeamCity")," attribute. For instance, you can run the ",(0,r.kt)("inlineCode",{parentName:"p"},"Compile")," target on every push with the latest Ubuntu image:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},"[TeamCity(\n    VcsTriggeredTargets = new[] { nameof(Compile) })]\nclass Build : NukeBuild { /* ... */ }\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title=".teamcity/settings.kts"',title:'".teamcity/settings.kts"'},'project {\n    buildType(Compile)\n}\n\nobject Compile : BuildType({\n    name = "Compile"\n    vcs {\n        root(DslContext.settingsRoot)\n        cleanCheckout = true\n    }\n    steps {\n        exec {\n            path = "build.cmd"\n            arguments = "Compile"\n            conditions { contains("teamcity.agent.jvm.os.name", "Windows") }\n        }\n        exec {\n            path = "build.sh"\n            arguments = "Compile"\n            conditions { doesNotContain("teamcity.agent.jvm.os.name", "Windows") }\n        }\n    }\n    params {\n        text(\n            "teamcity.ui.runButton.caption",\n            "Compile",\n            display = ParameterDisplay.HIDDEN)\n    }\n    triggers {\n        vcs {\n            triggerRules = "+:**"\n        }\n    }\n})\n'))),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Whenever you make changes to the attribute, you have to ",(0,r.kt)("a",{parentName:"p",href:"/docs/getting-started/execution"},"run the build")," at least once to regenerate the pipelines file."))),(0,r.kt)("h3",{id:"artifacts"},"Artifacts"),(0,r.kt)("p",null,"If your targets produce artifacts, like packages or coverage reports, you can publish those directly from the target definition:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'Target Pack => _ => _\n    .Produces(PackagesDirectory / "*.nupkg")\n    .Executes(() => { /* Implementation */ });\n')),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title=".teamcity/settings.kts"',title:'".teamcity/settings.kts"'},'object Pack : BuildType({\n    artifactRules = "output/packages/*.nupkg => output/packages"\n}\n'))),(0,r.kt)("p",null,"After your build has finished, those artifacts will be listed under the artifacts tab:"),(0,r.kt)("p",{style:{maxWidth:"780px"}},(0,r.kt)("p",null,(0,r.kt)("img",{alt:"TeamCity Artifacts Tab",src:n(65070).Z,width:"1556",height:"634"}))),(0,r.kt)("h3",{id:"importing-secrets"},"Importing Secrets"),(0,r.kt)("p",null,"If you want to use ",(0,r.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/help/teamcity/storing-project-settings-in-version-control.html#Storing+Secure+Settings"},"secret variables")," from your TeamCity project, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ImportSecrets")," property and ",(0,r.kt)("inlineCode",{parentName:"p"},"TeamCityToken")," attribute to automatically load them into a ",(0,r.kt)("a",{parentName:"p",href:"/docs/fundamentals/parameters#secret-parameters"},"secret parameter")," defined in your build:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'[TeamCity(\n    // ...\n    ImportSecrets = new[] { nameof(NuGetApiKey) })]\n[TeamCityToken(nameof(NuGetApiKey), "<guid>")]\nclass Build : NukeBuild\n{\n    [Parameter] [Secret] readonly string NuGetApiKey;\n}\n')),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".teamcity/settings.kts"',title:'".teamcity/settings.kts"'},'project {\n    params {\n        password (\n            "env.NuGetApiKey",\n            label = "NuGetApiKey",\n            value = "credentialsJSON:<guid>",\n            display = ParameterDisplay.HIDDEN)\n    }\n}\n'))),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you're facing any issues, make sure that the name in the TeamCity settings is the same as generated into the pipelines file."))),(0,r.kt)("h2",{id:"using-credentials"},"Using Credentials"),(0,r.kt)("p",null,"For every build run, TeamCity generates a pair of ",(0,r.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/help/teamcity/rest/teamcity-rest-api-documentation.html#REST+Authentication"},"one-time credentials")," that you can use to authenticate with the ",(0,r.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/help/teamcity/rest/teamcity-rest-api-documentation.html"},"TeamCity API"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'class Build : NukeBuild\n{\n    TeamCity TeamCity => TeamCity.Instance;\n\n    Target Request => _ => _\n        .Executes(() =>\n        {\n            Log.Information("UserId = {UserId}", TeamCity.AuthUserId);\n            Log.Information("Password = {Password}", TeamCity.AuthPassword);\n        });\n}\n')))}d.isMDXComponent=!0},65070:function(e,t,n){t.Z=n.p+"assets/images/teamcity-artifacts-667c2ff348779d884ac36bd898e4df01.webp"},72578:function(e,t,n){t.Z=n.p+"assets/images/teamcity-dark-5ad2b5c5cd0a439ddbbee2102f14e48f.webp"},52506:function(e,t,n){t.Z=n.p+"assets/images/teamcity-light-98d77b3daf7d1cc1d27b61bce9c4ef6e.webp"}}]);