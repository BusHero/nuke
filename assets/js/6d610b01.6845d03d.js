"use strict";(self.webpackChunknuke_website=self.webpackChunknuke_website||[]).push([[9452],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,y=u["".concat(l,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(y,i(i({ref:t},p),{},{components:n})):r.createElement(y,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},11831:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return m}});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),i=["components"],s={title:"Repository Insights"},l=void 0,c={unversionedId:"common/repository",id:"common/repository",title:"Repository Insights",description:"Having knowledge about the current branch, applied tags, and the repository origin is eminently important in various scenarios. For instance, the deployment destination for an application is different whether executed from a release or personal branch. An announcement target may only be executed when running on the main branch. And in many cases it is advisable to include repository metadata, like origin and commit hash, into the artifacts for better traceability.",source:"@site/docs/03-common/05-repository.md",sourceDirName:"03-common",slug:"/common/repository",permalink:"/docs/common/repository",draft:!1,editUrl:"https://github.com/nuke-build/nuke/edit/develop/website/docs/03-common/05-repository.md",tags:[],version:"current",lastUpdatedBy:"Matthias Koch",lastUpdatedAt:1656276144,formattedLastUpdatedAt:"6/26/2022",sidebarPosition:5,frontMatter:{title:"Repository Insights"},sidebar:"tutorialSidebar",previous:{title:"Constructing Paths",permalink:"/docs/common/paths"},next:{title:"Data Serialization",permalink:"/docs/common/serialization"}},p={},m=[{value:"GitHub Integration",id:"github-integration",level:2}],u={toc:m};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Having knowledge about the current branch, applied tags, and the repository origin is eminently important in various scenarios. For instance, the deployment destination for an application is different whether executed from a release or personal branch. An announcement target may only be executed when running on the main branch. And in many cases it is advisable to include repository metadata, like origin and commit hash, into the artifacts for better traceability."),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"GitRepositoryAttribute")," on a ",(0,a.kt)("inlineCode",{parentName:"p"},"GitRepository")," field or property, to automatically load all relevant information for the current revision at the beginning of build execution:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'[GitRepository] readonly GitRepository Repository;\n\nTarget Print => _ => _\n    .Executes(() =>\n    {\n        Log.Information("Commit = {Value}", Repository.Commit);\n        Log.Information("Branch = {Value}", Repository.Branch);\n        Log.Information("Tags = {Value}", Repository.Tags);\n\n        Log.Information("main branch = {Value}", Repository.IsOnMainBranch());\n        Log.Information("main/master branch = {Value}", Repository.IsOnMainOrMasterBranch());\n        Log.Information("release/* branch = {Value}", Repository.IsOnReleaseBranch());\n        Log.Information("hotfix/* branch = {Value}", Repository.IsOnHotfixBranch());\n\n        Log.Information("Https URL = {Value}", Repository.HttpsUrl);\n        Log.Information("SSH URL = {Value}", Repository.SshUrl);\n    });\n')),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Repository insights allow you to design your targets in a flexible manner using ",(0,a.kt)("a",{parentName:"p",href:"/docs/fundamentals/targets#requirements"},"requirements"),", ",(0,a.kt)("a",{parentName:"p",href:"/docs/fundamentals/targets#conditional-execution"},"conditional execution"),", or hybrid implementations:"),(0,a.kt)("pre",{parentName:"div"},(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'[GitRepository] readonly GitRepository Repository;\nstring OriginalRepositoryUrl => "https://github.com/nuke-build/nuke";\n\nTarget Deploy => _ => _\n    .Requires(() => Repository.IsOnMainOrMasterBranch());\n\nTarget CheckMilestone => _ => _\n    .OnlyWhenStatic(() => Repository.HttpsUrl.EqualsOrdinalIgnoreCase(OriginalRepositoryUrl));\n\nTarget Hotfix => _ => _\n    .Executes(() =>\n    {\n        if (Repository.IsOnHotfixBranch())\n            FinishHotfix();\n        else\n            CreateHotfix();\n    });\n')))),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"You can also manually create a ",(0,a.kt)("inlineCode",{parentName:"p"},"GitRepository")," instance:"),(0,a.kt)("pre",{parentName:"div"},(0,a.kt)("code",{parentName:"pre",className:"language-c#"},"var repository1 = GitRepository.FromLocalDirectory(directory);\nvar repository2 = GitRepository.FromUrl(url);\n")),(0,a.kt)("p",{parentName:"div"},"The only difference between ",(0,a.kt)("inlineCode",{parentName:"p"},"FromUrl")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"FromLocalDirectory")," is that the latter can initialize more properties, including ",(0,a.kt)("inlineCode",{parentName:"p"},"Commit"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Tags"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"RemoteBranch"),"."))),(0,a.kt)("h2",{id:"github-integration"},"GitHub Integration"),(0,a.kt)("p",null,"As one of the most popular Git hosting services, NUKE provides several methods to retrieve specific ",(0,a.kt)("strong",{parentName:"p"},"identifiers and links")," from a repository:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'// Get repository owner and name\nvar (owner, name) = (Repository.GetGitHubOwner(), Repository.GetGitHubName());\n\n// Get commit details URL when Repository is fully-synced\nvar commitUrl = Repository.GetGitHubCommitUrl(Repository.Commit);\n\n// Get comparison URL between tags\nvar comparisonUrl = Repository.GetGitHubCompareTagsUrl("1.0.1", "1.0.2");\n\n// Get file download URL\nvar downloadUrl = Repository.GetGitHubDownloadUrl(RootDirectory / "CHANGELOG.md", branch: "main");\n')),(0,a.kt)("p",null,"You can also further interact with the repository using the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/octokit/octokit.net"},"Octokit.NET")," integration:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"// Get the default branch\nvar defaultBranch = Repository.GetDefaultBranch();\n\n// Get the latest release\nvar latestRelease = Repository.GetLatestRelease(includePrerelease: false);\n")),(0,a.kt)("p",null,"For certain operations you may initialize an ",(0,a.kt)("strong",{parentName:"p"},"authorized client"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'// Set credentials for authorized actions\nvar credentials = new Credentials(GitHubActions.Instance.Token);\nGitHubTasks.GitHubClient = new GitHubClient(\n    new ProductHeaderValue(nameof(NukeBuild)),\n    new InMemoryCredentialStore(credentials));\n\n// Create and close a milestone\nRepository.CreateGitHubMilestone("5.1.0");\nRepository.CloseGitHubMilestone("5.1.0", enableIssueChecks: true);\n')))}d.isMDXComponent=!0}}]);