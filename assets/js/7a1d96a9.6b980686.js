"use strict";(self.webpackChunknuke_website=self.webpackChunknuke_website||[]).push([[4922],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return p}});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(a),p=i,f=d["".concat(s,".").concat(p)]||d[p]||m[p]||r;return a?n.createElement(f,o(o({ref:t},c),{},{components:a})):n.createElement(f,o({ref:t},c))}));function p(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},72360:function(e,t,a){a.d(t,{Z:function(){return o}});var n=a(67294),i=a(86010),r="tabItem_OmH5";function o(e){var t=e.children,a=e.hidden,o=e.className;return n.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,o),hidden:a},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return p}});var n=a(87462),i=a(67294),r=a(72389),o=a(67392),l=a(7094),s=a(12466),u=a(86010),c="tabList_uSqn",m="tabItem_LplD";function d(e){var t,a,r,d=e.lazy,p=e.block,f=e.defaultValue,v=e.values,g=e.groupId,h=e.className,k=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=v?v:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,o.l)(y,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var N=null===f?f:null!=(t=null!=f?f:null==(a=k.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(r=k[0])?void 0:r.props.value;if(null!==N&&!y.some((function(e){return e.value===N})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,l.U)(),T=w.tabGroupChoices,z=w.setTabGroupChoices,x=(0,i.useState)(N),S=x[0],O=x[1],M=[],I=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var j=T[g];null!=j&&j!==S&&y.some((function(e){return e.value===j}))&&O(j)}var C=function(e){var t=e.currentTarget,a=M.indexOf(t),n=y[a].value;n!==S&&(I(t),O(n),null!=g&&z(g,n))},D=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=M.indexOf(e.currentTarget)+1;a=M[n]||M[0];break;case"ArrowLeft":var i=M.indexOf(e.currentTarget)-1;a=M[i]||M[M.length-1]}null==(t=a)||t.focus()};return i.createElement("div",{className:(0,u.Z)("tabs-container",c)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":p},h)},y.map((function(e){var t=e.value,a=e.label,r=e.attributes;return i.createElement("li",(0,n.Z)({role:"tab",tabIndex:S===t?0:-1,"aria-selected":S===t,key:t,ref:function(e){return M.push(e)},onKeyDown:D,onFocus:C,onClick:C},r,{className:(0,u.Z)("tabs__item",m,null==r?void 0:r.className,{"tabs__item--active":S===t})}),null!=a?a:t)}))),d?(0,i.cloneElement)(k.filter((function(e){return e.props.value===S}))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},k.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==S})}))))}function p(e){var t=(0,r.Z)();return i.createElement(d,(0,n.Z)({key:String(t)},e))}},49946:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return v},frontMatter:function(){return u},metadata:function(){return m},toc:function(){return p}});var n=a(87462),i=a(63366),r=(a(67294),a(3905)),o=a(9877),l=a(72360),s=["components"],u={title:"Data Serialization"},c=void 0,m={unversionedId:"common/serialization",id:"common/serialization",title:"Data Serialization",description:"Structured data plays an essential role in build automation. You may want to read a list of repositories to be checked out, write data that's consumed by another tool, or update version numbers of SDKs and tools you consume. The central entry point for data serialization is the SerializationTasks class, which comes with support for JSON, XML, and YAML.",source:"@site/docs/03-common/06-serialization.md",sourceDirName:"03-common",slug:"/common/serialization",permalink:"/docs/common/serialization",draft:!1,editUrl:"https://github.com/nuke-build/nuke/edit/develop/website/docs/03-common/06-serialization.md",tags:[],version:"current",lastUpdatedBy:"Matthias Koch",lastUpdatedAt:1656273622,formattedLastUpdatedAt:"6/26/2022",sidebarPosition:6,frontMatter:{title:"Data Serialization"},sidebar:"tutorialSidebar",previous:{title:"Repository Insights",permalink:"/docs/common/repository"},next:{title:"Versioning Artifacts",permalink:"/docs/common/versioning"}},d={},p=[{value:"String Serialization",id:"string-serialization",level:2},{value:"File Serialization",id:"file-serialization",level:2},{value:"Updating Files",id:"updating-files",level:3}],f={toc:p};function v(e){var t=e.components,a=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Structured data plays an essential role in build automation. You may want to read a list of repositories to be checked out, write data that's consumed by another tool, or update version numbers of SDKs and tools you consume. The central entry point for data serialization is the ",(0,r.kt)("inlineCode",{parentName:"p"},"SerializationTasks")," class, which comes with support for JSON, XML, and YAML."),(0,r.kt)(o.Z,{groupId:"serialization",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"json",label:"JSON",default:!0,mdxType:"TabItem"},(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Please read the ",(0,r.kt)("a",{parentName:"p",href:"https://www.newtonsoft.com/json/help/html/Introduction.htm"},"Newtonsoft.Json documentation")," before proceeding.")))),(0,r.kt)(l.Z,{value:"xml",label:"XML",mdxType:"TabItem"},(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Please read the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/standard/linq/xdocument-class-overview"},"XDocument documentation")," before proceeding.")))),(0,r.kt)(l.Z,{value:"yaml",label:"YAML",mdxType:"TabItem"},(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Please read the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/aaubry/YamlDotNet/wiki"},"YamlDotNet documentation")," before proceeding."))))),(0,r.kt)("h2",{id:"string-serialization"},"String Serialization"),(0,r.kt)("p",null,"You can serialize data to strings and deserialize back from them as follows:"),(0,r.kt)(o.Z,{groupId:"serialization",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"json",label:"JSON",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},"// using static Nuke.Common.IO.SerializationTasks;\n\n// Strongly-typed\nvar configuration = JsonDeserialize<MyConfiguration>(json);\nvar json = JsonSerialize(configuration);\n\n// Dynamically-typed\nvar jobject = JsonDeserialize(json);\n"))),(0,r.kt)(l.Z,{value:"xml",label:"XML",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},"// using static Nuke.Common.IO.SerializationTasks;\n\n// Strongly-typed\nvar configuration = XmlDeserialize<MyConfiguration>(xml);\nvar xml = XmlSerialize(configuration);\n"))),(0,r.kt)(l.Z,{value:"yaml",label:"YAML",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},"// using static Nuke.Common.IO.SerializationTasks;\n\n// Strongly-typed\nvar configuration = YamlDeserialize<MyConfiguration>(yaml);\nvar yaml = YamlSerialize(configuration);\n")))),(0,r.kt)("h2",{id:"file-serialization"},"File Serialization"),(0,r.kt)("p",null,"You can serialize data to files and deserialize back from them as follows:"),(0,r.kt)(o.Z,{groupId:"serialization",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"json",label:"JSON",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},"// using static Nuke.Common.IO.SerializationTasks;\n\n// Strongly-typed\nvar configuration = JsonDeserializeFromFile<MyConfiguration>(jsonFile);\nJsonSerializeToFile(configuration, jsonFile);\n\n// Dynamically-typed\nvar jobject = JsonDeserializeFromFile(jsonFile);\n"))),(0,r.kt)(l.Z,{value:"xml",label:"XML",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},"// using static Nuke.Common.IO.SerializationTasks;\n\n// Strongly-typed\nvar configuration = XmlDeserializeFromFile<MyConfiguration>(xmlFile);\nXmlSerializeToFile(configuration, xmlFile);\n"))),(0,r.kt)(l.Z,{value:"yaml",label:"YAML",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},"// using static Nuke.Common.IO.SerializationTasks;\n\n// Strongly-typed\nvar configuration = YamlDeserializeFromFile<MyConfiguration>(yamlFile);\nYamlSerializeToFile(configuration, yamlFile);\n")))),(0,r.kt)("h3",{id:"updating-files"},"Updating Files"),(0,r.kt)("p",null,"Instead of reading, updating, and writing files in separated steps, you can also use the atomic functions below:"),(0,r.kt)(o.Z,{groupId:"serialization",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"json",label:"JSON",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'// using static Nuke.Common.IO.SerializationTasks;\n\nJsonUpdateFile<MyConfiguration>(\n    path: ConfigurationFile,\n    update: x => x.Value = "new-value");\n'))),(0,r.kt)(l.Z,{value:"xml",label:"XML",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'// using static Nuke.Common.IO.SerializationTasks;\n\nXmlUpdateFile<MyConfiguration>(\n    path: ConfigurationFile,\n    update: x => x.Value = "new-value");\n'))),(0,r.kt)(l.Z,{value:"yaml",label:"YAML",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Build.cs"',title:'"Build.cs"'},'// using static Nuke.Common.IO.SerializationTasks;\n\nYamlUpdateFile<MyConfiguration>(\n    path: ConfigurationFile,\n    update: x => x.Value = "new-value");\n')))))}v.isMDXComponent=!0}}]);